import axios from "axios";

const API_URL = "http://localhost:3000/api";

// Cliente de axios con configuración base
const api = axios.create({
  baseURL: API_URL,
  withCredentials: true,
  headers: {
    "Content-Type": "application/json",
  },
});

// Interceptor de respuestas
api.interceptors.response.use(
  (response) => response,
  async (error: any) => {
    if (error.response) {
      const { status } = error.response;

      if (status === 401) {
        window.location.href = "/login";
      }

      if (status === 403) {
        window.location.href = "/";
      }

      if ([404, 422].includes(status)) {
        console.error("Error de validación o no encontrado:", error.response.data);
      }
    }

    return Promise.reject(error);
  }
);

// Helpers genéricos
const apiService = {
  get: async <T = any>(url: string, params?: any) => {
    const res = await api.get<T>(url, { params });
    return res.data;
  },

  post: async <T = any>(url: string, body?: any) => {
    const res = await api.post<T>(url, body);
    return res.data;
  },

  put: async <T = any>(url: string, body?: any) => {
    const res = await api.put<T>(url, body);
    return res.data;
  },

  patch: async <T = any>(url: string, body?: any) => {
    const res = await api.patch<T>(url, body);
    return res.data;
  },

  delete: async <T = any>(url: string) => {
    const res = await api.delete<T>(url);
    return res.data;
  },
};

export default apiService;
